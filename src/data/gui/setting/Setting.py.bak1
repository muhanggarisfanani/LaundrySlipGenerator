#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 10, 2020 08:11:10 PM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Setting_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = SettingWindow (root)
    Setting_support.init(root, top)
    root.mainloop()

w = None
def create_SettingWindow(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_SettingWindow(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = SettingWindow (w)
    Setting_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_SettingWindow():
    global w
    w.destroy()
    w = None

class SettingWindow:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#ffffff'  # X11 color: 'white'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {Segoe UI} -size 9"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font=font9)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x720+734+134")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(0, 0)
        top.title("Setting")
        top.configure(background="#ffffff")

        self.TButtonCancel = ttk.Button(top)
        self.TButtonCancel.place(relx=0.783, rely=0.921, height=30, width=98)
        self.TButtonCancel.configure(takefocus="")
        self.TButtonCancel.configure(text='''Cancel''')

        self.TButtonSave = ttk.Button(top)
        self.TButtonSave.place(relx=0.6, rely=0.921, height=30, width=98)
        self.TButtonSave.configure(takefocus="")
        self.TButtonSave.configure(text='''Save''')

        self.TButtonAbout = ttk.Button(top)
        self.TButtonAbout.place(relx=0.058, rely=0.921, height=30, width=98)
        self.TButtonAbout.configure(takefocus="")
        self.TButtonAbout.configure(text='''About''')

        self.TLabelLogo = ttk.Label(top)
        self.TLabelLogo.place(relx=0.317, rely=0.028, height=64, width=64)
        self.TLabelLogo.configure(background="#ffffff")
        self.TLabelLogo.configure(foreground="#000000")
        self.TLabelLogo.configure(font=font9)
        self.TLabelLogo.configure(relief="flat")
        self.TLabelLogo.configure(anchor='w')
        self.TLabelLogo.configure(justify='left')
        self.TLabelLogo.configure(text='''Tlabel''')
        photo_location = os.path.join(prog_location,".")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.TLabelLogo.configure(image=_img0)

        self.TLabelLogotext = ttk.Label(top)
        self.TLabelLogotext.place(relx=0.433, rely=0.042, height=54, width=155)
        self.TLabelLogotext.configure(background="#ffffff")
        self.TLabelLogotext.configure(foreground="#000000")
        self.TLabelLogotext.configure(font=font9)
        self.TLabelLogotext.configure(relief="flat")
        self.TLabelLogotext.configure(anchor='w')
        self.TLabelLogotext.configure(justify='left')
        self.TLabelLogotext.configure(text='''Tlabel''')
        photo_location = os.path.join(prog_location,".")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.TLabelLogotext.configure(image=_img1)

if __name__ == '__main__':
    vp_start_gui()





