#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 14, 2020 01:23:21 AM +07  platform: Windows NT

import sys
import easygui

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import main
import data.gui.browse.Browse
import data.gui.start.Start
import data.util.xmlparser

def set_Tk_var():
    global TLabelPathFileVar
    TLabelPathFileVar = tk.StringVar()
    TLabelPathFileVar.set('<<< Cari file absensi dulu')
    global TEntryPeriodeVar
    TEntryPeriodeVar = tk.StringVar()
    global TEntryPemasukanVar
    TEntryPemasukanVar = tk.StringVar()
    global AbsenceData
    AbsenceData = []
    global TEntryKasbonVar
    TEntryKasbonVar = tk.StringVar()
    global TCheckboxKasbonVar
    TCheckboxKasbonVar = tk.BooleanVar()
    global TEntryKotaVar
    TEntryKotaVar = tk.StringVar()
    TEntryKotaVar.set('Bandung')

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def TButtonBrowseFileCommand():
    global AbsenceData
    sys.stdout.flush()
    # Membuka openfiledialog untuk mendapatkan logoPath
    tPathLogo = easygui.fileopenbox(title='Select File (CLOCK)')
    if (tPathLogo != None):
        if ((tPathLogo[len(tPathLogo)-4:len(tPathLogo)] != '.XLS' and tPathLogo[len(tPathLogo)-4:len(tPathLogo)] != '.xls') and
            (tPathLogo[len(tPathLogo)-5:len(tPathLogo)] != '.XLSX' and tPathLogo[len(tPathLogo)-5:len(tPathLogo)] != '.xlsx') and
            (tPathLogo[len(tPathLogo)-4:len(tPathLogo)] != '.XML' and tPathLogo[len(tPathLogo)-4:len(tPathLogo)] != '.xml')):
            TLabelPathFileVar.set("Pilih antara file berekstensi '*.xls' atau '*.xlxs' atau '*.xml'.")
        else:
            TLabelPathFileVar.set(tPathLogo)
            # Mencari karyawan laundry dalam file absensi tersebut
            AbsenceData = data.util.xmlparser.convertXmlFileToListOfData(tPathLogo)
            # Memasukkan daftar karyawan laundry ke dalam Listbox
            for i in range(AbsenceData[1]): #Banyaknya Orang
                # jika Shift == Laundry, tampilkan dalam listbox tersedia
                if (getShift(AbsenceData[2][i][0]) == 'Laundry'):
                    data.gui.browse.Browse.top.insertToListboxKaryawanTersedia(i, getIDAndName(AbsenceData[2][i][0]))

def TButtonAddKaryawanCommand():
    if (data.gui.browse.Browse.top.isOnListboxKaryawanTersediaSelection()):
        # Membuka dialog entry untuk masukan kasbon (jika ada)
        if (TCheckboxKasbonVar.get()):
            data.gui.browse.Browse.top.openKasbonWindow()
        else:
            selectedItem = data.gui.browse.Browse.top.getSelectedToListboxKaryawanTersedia()
            # Memindahkan selected karyawan dari daftar tersedia ke daftar terpilih
            # Insert value
            data.gui.browse.Browse.top.insertToListboxKaryawanTerpilih(tk.END, selectedItem)
            # Delete selected
            data.gui.browse.Browse.top.deleteSelectedToListboxKaryawanTersedia()

def TButtonOKCommand():
    # Get value
    selectedItem = data.gui.browse.Browse.top.getSelectedToListboxKaryawanTersedia()
    # Jika Kasbon ada, maka merubah nilai kasbon di data absensi
    if (TEntryKasbonVar.get() != ''):
        # Contoh : ID:00000006  Name:Angga
        ID = selectedItem[3:11]
        kasbon = int(TEntryKasbonVar.get())
        # set kasbon menjadi nilai yang diinput dari entry
        setKasbonbyID(ID,kasbon)
        TEntryKasbonVar.set('')
    # Memindahkan selected karyawan dari daftar tersedia ke daftar terpilih
    # Insert value
    data.gui.browse.Browse.top.insertToListboxKaryawanTerpilih(tk.END, selectedItem)
    # Delete selected
    data.gui.browse.Browse.top.deleteSelectedToListboxKaryawanTersedia()
    # Menutup kasbon dialog box
    data.gui.browse.Browse.top.topKasbon.closeKasbonWindow()

def TButtonDeleteKaryawan():
    # Memindahkan selected karyawan dari daftar terpilih ke daftar tersedia
    if (data.gui.browse.Browse.top.isOnListboxKaryawanTerpilihSelection()):
        # Get value
        selectedItem = data.gui.browse.Browse.top.getSelectedToListboxKaryawanTerpilih()
        # reset nilai kasbon
        ID = selectedItem[3:11]
        setKasbonbyID(ID,0)
        # Insert value
        data.gui.browse.Browse.top.insertToListboxKaryawanTersedia(tk.END, selectedItem)
        # Delete selected
        data.gui.browse.Browse.top.deleteSelectedToListboxKaryawanTerpilih()

def TButtonGoCommand():
    global resData
    resData = []
    # Jika data lengkap, akan dilakukan passing data
    # Mengisi SelectedData yang terpilih pada listBox
    SelectedDataListbox = data.gui.browse.Browse.top.getKaryawanTerpilih()
    # Mempassing nilai untuk digunakan di menu utama
    if ((TLabelPathFileVar.get() != '<<< Cari file absensi dulu' and TLabelPathFileVar.get() != "Pilih antara file berekstensi '*.xls' atau '*.xlxs' atau '*.xml'.") and
       (TEntryPeriodeVar.get() != '' and TEntryPemasukanVar.get() != '' and len(SelectedDataListbox) != 0)):
        # Mem-passing pathFile file absensi
        resData.append(TLabelPathFileVar.get())
        # Mengambil nilai entry periode, dan entry pemasukan kotor
        resData.append(TEntryPeriodeVar.get())
        resData.append(TEntryPemasukanVar.get())
        # Mem-passing nilai list of Tuple(selectedKaryawan,kasbon,listofAbsensi)
        SelectedData = getSelectedDataFromListBox(SelectedDataListbox)
        resData.append(SelectedData)
        # Membuka open dialog untuk input kota
        data.gui.browse.Browse.top.openKotaWindow()

def TButtonOKKotaCommand():
    global resData
    if (TEntryKotaVar.get() != ''):
        resData.append(TEntryKotaVar.get())
    else:
        resData.append('Bandung')
    data.gui.browse.Browse.top.topKota.closeKotaWindow()
    # Mem-passing resData ke program utama
    main.resData = resData
    # Menutup halaman browse file
    destroy_window()
    # Membuka halaman start
    data.gui.start.Start.vp_start_gui()
        
def TButtonCancelCommand():
    # Menutup halaman browse file
    destroy_window()
    # Membuka halaman start
    data.gui.start.Start.vp_start_gui()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

def getShift(karyawan):
    shift = karyawan.split()[3]
    return shift[6:len(shift)]

def getIDAndName(karyawan):
    data = karyawan.split()
    idx = data[0]
    name = data[1]
    return idx + ' ' + name

def setKasbonbyID(ID, kasbon):
    for i in range(AbsenceData[1]):
        if (AbsenceData[2][i][0][3:11] == ID):
            AbsenceData[2][i][1] = kasbon

def getSelectedDataFromListBox(tupleOfData):
    selectedData = []
    for dataInListbox in tupleOfData:
        for karyawanData in AbsenceData[2]:
            if (dataInListbox == karyawanData[0][0:len(dataInListbox)]):
                selectedData.append(karyawanData)
    return selectedData