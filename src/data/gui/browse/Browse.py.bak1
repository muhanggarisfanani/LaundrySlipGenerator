#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 14, 2020 12:57:20 AM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from PIL import Image, ImageTk

import Browse_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    Browse_support.set_Tk_var()
    top = FileWindow (root)
    Browse_support.init(root, top)
    root.mainloop()

w = None
def create_FileWindow(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_FileWindow(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    Browse_support.set_Tk_var()
    top = FileWindow (w)
    Browse_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_FileWindow():
    global w
    w.destroy()
    w = None

class FileWindow:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#ffffff'  # X11 color: 'white'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Times New Roman} -size 12"
        font9 = "-family {Segoe UI} -size 9"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font=font9)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1366x768+267+144")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(0, 0)
        top.title("File Configuration")
        top.configure(background="#ffffff")

        self.TLabelInstruksiBrowseFile = ttk.Label(top)
        self.TLabelInstruksiBrowseFile.place(relx=0.037, rely=0.052, height=24
                , width=613)
        self.TLabelInstruksiBrowseFile.configure(background="#ffffff")
        self.TLabelInstruksiBrowseFile.configure(foreground="#000000")
        self.TLabelInstruksiBrowseFile.configure(font=font9)
        self.TLabelInstruksiBrowseFile.configure(relief="flat")
        self.TLabelInstruksiBrowseFile.configure(anchor='w')
        self.TLabelInstruksiBrowseFile.configure(justify='left')
        self.TLabelInstruksiBrowseFile.configure(text='''Pertama, pilih file absensi terlebih dahulu dengan menekan tombol "Browse File" di bawah.''')

        self.TButtonBrowseFile = ttk.Button(top)
        self.TButtonBrowseFile.place(relx=0.037, rely=0.091, height=30
                , width=118)
        self.TButtonBrowseFile.configure(takefocus="")
        self.TButtonBrowseFile.configure(text='''Browse File''')

        self.TLabelPathFile = ttk.Label(top)
        self.TLabelPathFile.place(relx=0.132, rely=0.096, height=24, width=484)
        self.TLabelPathFile.configure(background="#ffffff")
        self.TLabelPathFile.configure(foreground="#000000")
        self.TLabelPathFile.configure(font=font9)
        self.TLabelPathFile.configure(relief="flat")
        self.TLabelPathFile.configure(anchor='w')
        self.TLabelPathFile.configure(justify='left')
        self.TLabelPathFile.configure(textvariable=Browse_support.TLabelPathFileVar)

        self.TLabelContohPathFile = ttk.Label(top)
        self.TLabelContohPathFile.place(relx=0.037, rely=0.13, height=24
                , width=214)
        self.TLabelContohPathFile.configure(background="#ffffff")
        self.TLabelContohPathFile.configure(foreground="#000000")
        self.TLabelContohPathFile.configure(font=font9)
        self.TLabelContohPathFile.configure(relief="flat")
        self.TLabelContohPathFile.configure(anchor='w')
        self.TLabelContohPathFile.configure(justify='left')
        self.TLabelContohPathFile.configure(text='''( Contoh : 01CLOCK-20-02.XLS )''')

        self.TLabelInstruksiEntry = ttk.Label(top)
        self.TLabelInstruksiEntry.place(relx=0.037, rely=0.182, height=24
                , width=623)
        self.TLabelInstruksiEntry.configure(background="#ffffff")
        self.TLabelInstruksiEntry.configure(foreground="#000000")
        self.TLabelInstruksiEntry.configure(font=font9)
        self.TLabelInstruksiEntry.configure(relief="flat")
        self.TLabelInstruksiEntry.configure(anchor='w')
        self.TLabelInstruksiEntry.configure(justify='left')
        self.TLabelInstruksiEntry.configure(text='''Kedua, masukkan periode penggajian dan nominal pemasukan (kotor) pada periode tersebut.''')

        self.TLabelPeriode = ttk.Label(top)
        self.TLabelPeriode.place(relx=0.044, rely=0.221, height=24, width=105)
        self.TLabelPeriode.configure(background="#ffffff")
        self.TLabelPeriode.configure(foreground="#000000")
        self.TLabelPeriode.configure(font=font9)
        self.TLabelPeriode.configure(relief="flat")
        self.TLabelPeriode.configure(anchor='w')
        self.TLabelPeriode.configure(justify='left')
        self.TLabelPeriode.configure(text='''Periode           :''')

        self.TEntryPeriode = ttk.Entry(top)
        self.TEntryPeriode.place(relx=0.124, rely=0.221, relheight=0.034
                , relwidth=0.13)
        self.TEntryPeriode.configure(textvariable=Browse_support.TEntryPeriodeVar)
        self.TEntryPeriode.configure(takefocus="")
        self.TEntryPeriode.configure(cursor="ibeam")

        self.TLabelPemasukan = ttk.Label(top)
        self.TLabelPemasukan.place(relx=0.044, rely=0.26, height=23, width=103)
        self.TLabelPemasukan.configure(background="#ffffff")
        self.TLabelPemasukan.configure(foreground="#000000")
        self.TLabelPemasukan.configure(font="-family {Segoe UI} -size 9")
        self.TLabelPemasukan.configure(relief="flat")
        self.TLabelPemasukan.configure(anchor='w')
        self.TLabelPemasukan.configure(justify='left')
        self.TLabelPemasukan.configure(text='''Pemasukan     :''')

        self.TEntryPemasukan = ttk.Entry(top)
        self.TEntryPemasukan.place(relx=0.124, rely=0.26, relheight=0.034
                , relwidth=0.13)
        self.TEntryPemasukan.configure(textvariable=Browse_support.TEntryPemasukanVar)
        self.TEntryPemasukan.configure(takefocus="")
        self.TEntryPemasukan.configure(cursor="ibeam")

        self.TLabelContohPeriode = ttk.Label(top)
        self.TLabelContohPeriode.place(relx=0.264, rely=0.221, height=24
                , width=214)
        self.TLabelContohPeriode.configure(background="#ffffff")
        self.TLabelContohPeriode.configure(foreground="#000000")
        self.TLabelContohPeriode.configure(font=font9)
        self.TLabelContohPeriode.configure(relief="flat")
        self.TLabelContohPeriode.configure(anchor='w')
        self.TLabelContohPeriode.configure(justify='left')
        self.TLabelContohPeriode.configure(text='''( Contoh : 01-29 Februari 2020 )''')

        self.TLabelContohPemasukan = ttk.Label(top)
        self.TLabelContohPemasukan.place(relx=0.264, rely=0.26, height=23
                , width=265)
        self.TLabelContohPemasukan.configure(background="#ffffff")
        self.TLabelContohPemasukan.configure(foreground="#000000")
        self.TLabelContohPemasukan.configure(font=font9)
        self.TLabelContohPemasukan.configure(relief="flat")
        self.TLabelContohPemasukan.configure(anchor='w')
        self.TLabelContohPemasukan.configure(justify='left')
        self.TLabelContohPemasukan.configure(text='''( Contoh : 5000000 )''')

        self.TLabelInstruksiPilihKaryawan = ttk.Label(top)
        self.TLabelInstruksiPilihKaryawan.place(relx=0.037, rely=0.326, height=24
                , width=784)
        self.TLabelInstruksiPilihKaryawan.configure(background="#ffffff")
        self.TLabelInstruksiPilihKaryawan.configure(foreground="#000000")
        self.TLabelInstruksiPilihKaryawan.configure(font=font9)
        self.TLabelInstruksiPilihKaryawan.configure(relief="flat")
        self.TLabelInstruksiPilihKaryawan.configure(anchor='w')
        self.TLabelInstruksiPilihKaryawan.configure(justify='left')
        self.TLabelInstruksiPilihKaryawan.configure(text='''Ketiga, pilih karyawan yang akan di-generate slip gajinya, serta masukkan kasbon masing-masing karyawan (jika ada).''')

        self.TFrameListboxKaryawan = ttk.Frame(top)
        self.TFrameListboxKaryawan.place(relx=0.044, rely=0.365, relheight=0.556
                , relwidth=0.561)
        self.TFrameListboxKaryawan.configure(relief='groove')
        self.TFrameListboxKaryawan.configure(borderwidth="2")
        self.TFrameListboxKaryawan.configure(relief="groove")

        self.ListboxKaryawanTersedia = tk.Listbox(self.TFrameListboxKaryawan)
        self.ListboxKaryawanTersedia.place(relx=0.039, rely=0.164
                , relheight=0.768, relwidth=0.371)
        self.ListboxKaryawanTersedia.configure(activestyle="none")
        self.ListboxKaryawanTersedia.configure(background="white")
        self.ListboxKaryawanTersedia.configure(disabledforeground="#a3a3a3")
        self.ListboxKaryawanTersedia.configure(font=font10)
        self.ListboxKaryawanTersedia.configure(foreground="#000000")
        self.ListboxKaryawanTersedia.configure(relief="groove")

        self.ListboxKaryawanTerpilih = tk.Listbox(self.TFrameListboxKaryawan)
        self.ListboxKaryawanTerpilih.place(relx=0.587, rely=0.164
                , relheight=0.768, relwidth=0.371)
        self.ListboxKaryawanTerpilih.configure(background="white")
        self.ListboxKaryawanTerpilih.configure(disabledforeground="#a3a3a3")
        self.ListboxKaryawanTerpilih.configure(font=font10)
        self.ListboxKaryawanTerpilih.configure(foreground="#000000")
        self.ListboxKaryawanTerpilih.configure(highlightbackground="#d9d9d9")
        self.ListboxKaryawanTerpilih.configure(highlightcolor="black")
        self.ListboxKaryawanTerpilih.configure(relief="groove")
        self.ListboxKaryawanTerpilih.configure(selectbackground="#c4c4c4")
        self.ListboxKaryawanTerpilih.configure(selectforeground="black")

        self.TButtonAddKaryawan = ttk.Button(self.TFrameListboxKaryawan)
        self.TButtonAddKaryawan.place(relx=0.509, rely=0.515, height=30
                , width=48)
        self.TButtonAddKaryawan.configure(command=Browse_support.TButtonAddKaryawanCommand)
        self.TButtonAddKaryawan.configure(takefocus="")
        self.TButtonAddKaryawan.configure(text='''>>''')

        self.TButtonDeleteKaryawan = ttk.Button(self.TFrameListboxKaryawan)
        self.TButtonDeleteKaryawan.place(relx=0.431, rely=0.515, height=30
                , width=48)
        self.TButtonDeleteKaryawan.configure(command=Browse_support.TButtonDeleteKaryawan)
        self.TButtonDeleteKaryawan.configure(takefocus="")
        self.TButtonDeleteKaryawan.configure(text='''<<''')

        self.TLabelListKaryawanTersedia = ttk.Label(self.TFrameListboxKaryawan)
        self.TLabelListKaryawanTersedia.place(relx=0.026, rely=0.047, height=24
                , width=190)
        self.TLabelListKaryawanTersedia.configure(background="#ffffff")
        self.TLabelListKaryawanTersedia.configure(foreground="#000000")
        self.TLabelListKaryawanTersedia.configure(font=font9)
        self.TLabelListKaryawanTersedia.configure(relief="flat")
        self.TLabelListKaryawanTersedia.configure(anchor='w')
        self.TLabelListKaryawanTersedia.configure(justify='left')
        self.TLabelListKaryawanTersedia.configure(text='''~ Daftar karyawan tersedia :''')

        self.TLabelListKaryawanTerpilih = ttk.Label(self.TFrameListboxKaryawan)
        self.TLabelListKaryawanTerpilih.place(relx=0.574, rely=0.047, height=24
                , width=186)
        self.TLabelListKaryawanTerpilih.configure(background="#ffffff")
        self.TLabelListKaryawanTerpilih.configure(foreground="#000000")
        self.TLabelListKaryawanTerpilih.configure(font="-family {Segoe UI} -size 9")
        self.TLabelListKaryawanTerpilih.configure(relief="flat")
        self.TLabelListKaryawanTerpilih.configure(anchor='w')
        self.TLabelListKaryawanTerpilih.configure(justify='left')
        self.TLabelListKaryawanTerpilih.configure(text='''~ Daftar karyawan terpilih :''')

        self.TButtonGo = ttk.Button(top)
        self.TButtonGo.place(relx=0.769, rely=0.755, height=40, width=138)
        self.TButtonGo.configure(command=Browse_support.TButtonGoCommand)
        self.TButtonGo.configure(takefocus="")
        self.TButtonGo.configure(text='''Go''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.637, rely=0.039, relheight=0.897)
        self.TSeparator1.configure(orient="vertical")

        self.TButtonCancel = ttk.Button(top)
        self.TButtonCancel.place(relx=0.769, rely=0.82, height=40, width=138)
        self.TButtonCancel.configure(command=Browse_support.TButtonCancelCommand)
        self.TButtonCancel.configure(takefocus="")
        self.TButtonCancel.configure(text='''Cancel''')

        self.TSeparator2 = ttk.Separator(top)
        self.TSeparator2.place(relx=0.673, rely=0.664, relwidth=0.294)

        self.TLabelLogo = ttk.Label(top)
        self.TLabelLogo.place(relx=0.673, rely=0.104, height=384, width=405)
        self.TLabelLogo.configure(background="#ffffff")
        self.TLabelLogo.configure(foreground="#000000")
        self.TLabelLogo.configure(font=font9)
        self.TLabelLogo.configure(relief="flat")
        self.TLabelLogo.configure(anchor='center')
        self.TLabelLogo.configure(justify='left')
        photo_location = os.path.join(prog_location,".")
        global _img0
        _img0 = ImageTk.PhotoImage(file=photo_location)
        self.TLabelLogo.configure(image=_img0)

if __name__ == '__main__':
    vp_start_gui()





